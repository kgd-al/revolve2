:orphan:

:py:mod:`_learner`
==============================================================

.. py:module:: experimentation.evolution.abstract_elements._learner


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   experimentation.evolution.abstract_elements._learner.Learner




Attributes
~~~~~~~~~~

.. autoapisummary::

   experimentation.evolution.abstract_elements._learner.TPopulation


.. py:data:: TPopulation

   

.. py:class:: Learner


   Bases: :py:obj:`abc.ABC`

   .. autoapi-inheritance-diagram:: experimentation.evolution.abstract_elements._learner.Learner
      :parts: 1

   A Learner object that enables learning for individuals in an evolutionary process.

   The learner is dependent on its reward function, which is: a measure that drives learning.
   Depending on the learning method used, the reward can simply equal task performance.

   Task performance on the other hand is a measure that reflects how well a task is performed.
   In a robot system with multiple tasks, there are multiple definitions of task performance.
   Task performance can be used to define fitness and/or reward functions.

   For more information wait for Prof. Dr. A.E. Eiben`s book on evolutionary robotics, or ask him directly.

   .. py:method:: learn(population: TPopulation) -> TPopulation
      :abstractmethod:

      Make Individuals from a population learn.

      :param population: The population.
      :return: The learned population.



