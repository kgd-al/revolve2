:orphan:

:py:mod:`_make_cpg_network_structure_neighbor`
======================================================================

.. py:module:: modular_robot.brain.cpg._make_cpg_network_structure_neighbor


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   modular_robot.brain.cpg._make_cpg_network_structure_neighbor.active_hinges_to_cpg_network_structure_neighbor



.. py:function:: active_hinges_to_cpg_network_structure_neighbor(active_hinges: list[modular_robot.body.base.ActiveHinge]) -> tuple[modular_robot.brain.cpg._cpg_network_structure.CpgNetworkStructure, list[tuple[int, modular_robot.body.base.ActiveHinge]]]

   Create the structure of a CPG network based on a list of active hinges.

   The order of the active hinges matches the order of the CPGs.
   I.e. every active hinges has a corresponding CPG,
   and these are stored in the order the hinges are provided in.

   :param active_hinges: The active hinges to base the structure on.
   :returns: The created structure and a mapping between state indices and active hinges.


