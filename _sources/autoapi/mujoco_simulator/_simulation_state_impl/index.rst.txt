:orphan:

:py:mod:`_simulation_state_impl`
=================================================

.. py:module:: mujoco_simulator._simulation_state_impl


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   mujoco_simulator._simulation_state_impl.SimulationStateImpl




.. py:class:: SimulationStateImpl(data: mujoco.MjData, abstraction_to_mujoco_mapping: mujoco_simulator._abstraction_to_mujoco_mapping.AbstractionToMujocoMapping, camera_views: dict[int, numpy.typing.NDArray[numpy.uint8]])


   Bases: :py:obj:`revolve2.simulation.scene.SimulationState`

   .. autoapi-inheritance-diagram:: mujoco_simulator._simulation_state_impl.SimulationStateImpl
      :parts: 1

   Implementation of the simulation state interface for MuJoCo.

   .. py:method:: get_rigid_body_relative_pose(rigid_body: revolve2.simulation.scene.RigidBody) -> revolve2.simulation.scene.Pose
      :abstractmethod:

      Get the pose of a rigid body, relative to its parent multi-body system's reference frame.

      :param rigid_body: The rigid body to get the pose for.
      :returns: The relative pose.
      :raises NotImplementedError: Always.


   .. py:method:: get_rigid_body_absolute_pose(rigid_body: revolve2.simulation.scene.RigidBody) -> revolve2.simulation.scene.Pose
      :abstractmethod:

      Get the pose of a rigid body, relative the global reference frame.

      :param rigid_body: The rigid body to get the pose for.
      :returns: The absolute pose.
      :raises NotImplementedError: Always.


   .. py:method:: get_multi_body_system_pose(multi_body_system: revolve2.simulation.scene.MultiBodySystem) -> revolve2.simulation.scene.Pose

      Get the pose of a multi-body system, relative to the global reference frame.

      :param multi_body_system: The multi-body system to get the pose for.
      :returns: The relative pose.


   .. py:method:: get_hinge_joint_position(joint: revolve2.simulation.scene.JointHinge) -> float

      Get the rotational position of a hinge joint.

      :param joint: The joint to get the rotational position for.
      :returns: The rotational position.


   .. py:method:: get_imu_specific_force(imu_sensor: revolve2.simulation.scene.sensors.IMUSensor) -> pyrr.Vector3

      Get the specific force measured an IMU.

      :param imu_sensor: The IMU.
      :returns: The specific force.


   .. py:method:: get_imu_angular_rate(imu_sensor: revolve2.simulation.scene.sensors.IMUSensor) -> pyrr.Vector3

      Get the angular rate measured by am IMU.

      :param imu_sensor: The IMU.
      :returns: The angular rate.


   .. py:method:: get_camera_view(camera_sensor: revolve2.simulation.scene.sensors.CameraSensor) -> numpy.typing.NDArray[numpy.uint8]

      Get the current view of the camera.

      :param camera_sensor: The camera.
      :return: The image (RGB).



